/* make keyframes that tell the start state and the end state of our object */
@-webkit-keyframes fadeIn { from { opacity:0; } to { opacity:1; } }
@-moz-keyframes fadeIn { from { opacity:0; } to { opacity:1; } }
@keyframes fadeIn { from { opacity:0; } to { opacity:1; } }

.fade-in {
  opacity:0;  /* make things invisible upon start */
  -webkit-animation:fadeIn ease-in 1;  /* call our keyframe named fadeIn, use animattion ease-in and repeat it only 1 time */
  -moz-animation:fadeIn ease-in 1;
  animation:fadeIn ease-in 1;

  -webkit-animation-fill-mode:forwards;  /* this makes sure that after animation is done we remain at the last keyframe value (opacity: 1)*/
  -moz-animation-fill-mode:forwards;
  animation-fill-mode:forwards;

  -webkit-animation-duration:1s;
  -moz-animation-duration:1s;
  animation-duration:1s;
}


html, body, canvas, h1, h2, h3, h4, h5 {
  padding: 0px;
  margin: 0px;
  position: relative;
  overflow: hidden;
}

* {
	font-family: "Quicksand";
}

.hidden {
	display: hidden;
}

.visible {
	display: block;
}


.center {
	margin: 0 auto;
	text-align: center;
}

.left {
    margin: 0 auto;
    text-align: left;
}


#game {
	position: relative;
	height: 100%;
	width: 100%;
}

#multiplayer {
    font-size: 14px;
}

.info-wrapper {
	position: absolute;
	height: 100%;
	width: 100%;
	opacity: 1.0;
	transition: 0.5s;
	z-index: 2;
}

.circle-wrapper {
	height: 250px;
	width: 250px;
	border-radius: 50%;
	background-color: black;
	margin: 15% auto 0 auto;
	overflow: wrap;
}

.sm-circle-wrapper {
    height: 150px;
    width: 150px;
    border-radius: 50%;
    background-color: black;
    margin: 0% auto 0 auto;
    overflow: wrap;
}

.info {
	color: white;
	top: 50%;
	transform: translateY(-50%);
	position: relative;
}

.footer {
	position: absolute; 
	bottom: 10px; 
	right: 10px;
	text-align: right;
}

.gone {
	/*opacity: 0.0;
	transition: 0.5s;*/
	display: none;
}

.transparent {
	transition: 2.0s;
	opacity: 0.4;
}
